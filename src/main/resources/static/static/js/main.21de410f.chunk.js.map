{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","e","setState","target","name","value","preventDefault","newProject","classnames","placeholder","nextProps","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","prevProps","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","length","curStatus","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTasknew","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","newLogin","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.21de410f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Proceed to delete? This will delete the project and all data related to it.\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for Backlog Actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from \"react\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    //post login request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    //extract token from res.data\n    const { token } = res.data;\n    //store the token in the local storage\n    localStorage.setItem(\"jwtToken\", token);\n    //set our token in the header\n    setJWTToken(token);\n    //decode the toke on React\n    const decoded = jwt_decode(token);\n    //distpatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (user && validToken) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.errors) {\n      return { errors: nextProps.errors };\n    }\n    return null;\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState({ errors: this.props.errors });\n    }\n    if (prevProps.project !== this.props.project) {\n      const {\n        id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date,\n      } = this.props.project;\n      this.setState({\n        id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date,\n      });\n    }\n  }\n\n  /*\n  static getDerivedStateFromProps(nextProps) {\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    return {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    };\n  }\n  */\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project Form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    } else if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    } else if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action can not be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_props } = this.props;\n    const tasks = project_tasks_props.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      //console.log(tasks[i]);\n      let curStatus = tasks[i].props.project_task.status;\n      if (curStatus === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      } else if (curStatus === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      } else if (curStatus === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState({ errors: this.props.errors });\n    }\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_props={project_tasks} />;\n      }\n    };\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState({ errors: this.props.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">\n                {\" \"}\n                Project ID : {this.state.projectIdentifier}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: null,\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.errors !== this.props.errors) {\n      this.setState({ errors: this.props.errors });\n    }\n    if (prevProps.project_task !== this.props.project_task) {\n      const {\n        id,\n        projectSequence,\n        summary,\n        acceptanceCriteria,\n        status,\n        priority,\n        dueDate,\n        projectIdentifier,\n        create_At,\n      } = this.props.project_task;\n      this.setState({\n        id,\n        projectSequence,\n        summary,\n        acceptanceCriteria,\n        status,\n        priority,\n        dueDate,\n        projectIdentifier,\n        create_At,\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProjectTasknew = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n    this.props.updateProjectTask(\n      updateProjectTasknew.projectIdentifier,\n      updateProjectTasknew.projectSequence,\n      updateProjectTasknew,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.errors !== this.props.errors) {\n      this.setState({ errors: this.props.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (User name)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newLogin = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.login(newLogin);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.errors !== this.props.errors) {\n      this.setState({ errors: this.props.errors });\n    }\n\n    if (this.props.security.validToken) {\n      prevProps.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address/Username\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}